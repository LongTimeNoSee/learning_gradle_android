apply plugin: 'com.android.application'
apply from: "$rootDir/android-common-task.gradle"

def versionMajor = 1
def versionMinor = 0
def versionPatch = 1
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

archivesBaseName = "demo"

dependencies {
    compile "com.android.support:support-v4:${supportPackageVersion}"
    compile project(':library:ActionBarSherlock:library')
    compile project(':library:UnifiedPreference:library')
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 17
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}" + getGitHash()
        applicationId = 'com.corner23.android.demo'
    }

    project.ext.appStartupClassName = 'com.corner23.android.demo.MainActivity'
    
    productFlavors {
        rock
        amazonFree {
            applicationId = 'com.corner23.android.demo.amazon.free'
        }
        amazonPaid {
            applicationId = 'com.corner23.android.demo.amazon.paid'
        }
        playFree {
            applicationId = 'com.corner23.android.demo.play.free'
        }
        playPaid {
            applicationId = 'com.corner23.android.demo.play.paid'
        }
    }

    signingConfigs {
        release
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-SNAPSHOT"
        }

        release {
            signingConfig signingConfigs.release

            minifyEnabled true
            shrinkResources true
            proguardFile 'proguard-android.txt'
        }
    }

    // setup your extra resources here, if not defined the default debug and 
    // release sourceSets will be used
    project.ext.amazonPaid = [
        debugManifest: 'src/amazonPaidDebug/AndroidManifest.xml',
        releaseManifest: 'src/amazonPaidRelease/AndroidManifest.xml',
        debugRes: ['src/amazonPaidDebug/res'],
        releaseRes: ['src/amazonPaidRelease/res']
    ]

    project.ext.amazonFree = [
        debugManifest: 'src/amazonFreeDebug/AndroidManifest.xml',
        releaseManifest: 'src/amazonFreeRelease/AndroidManifest.xml',
        debugRes: ['src/amazonFreeDebug/res'], 
        releaseRes: ['src/amazonFreeRelease/res']
    ]
}

clean.doLast {
    project.delete "$rootProject.projectDir/out"
}

def env = System.getProperties()
if (env['com.android.studio.gradle.project.path'] != null) {
    project.ext.buildFromAndroidStudio = true
}

if (project.hasProperty('keyAlias') && 
    project.hasProperty('storeFile') &&
    project.hasProperty('storePassword') &&
    project.hasProperty('keyPassword')) {
    android.signingConfigs.release.keyAlias = keyAlias
    android.signingConfigs.release.storeFile = file(storeFile)
    android.signingConfigs.release.storePassword = storePassword
    android.signingConfigs.release.keyPassword = keyPassword
} else {
    android.buildTypes.release.signingConfig = null
}
