apply plugin: 'android'
apply from: "$rootDir/android-common-task.gradle"

archivesBaseName = "demo"

dependencies {
    compile 'com.android.support:support-v4:13.0.0'
    compile project(':library:ActionBarSherlock:library')
    compile project(':library:UnifiedPreference:library')
}

android {
    compileSdkVersion 17
    buildToolsVersion "17.0.0"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 17
        versionName '1.0.1'
        packageName = 'com.corner23.android.demo'
    }

    project.ext.appStartupClassName = 'com.corner23.android.demo.MainActivity'
    
    productFlavors {
        rock
        amazonFree {
            packageName = 'com.corner23.android.demo.amazon.free'
        }
        amazonPaid {
            packageName = 'com.corner23.android.demo.amazon.paid'
        }
        playFree {
            packageName = 'com.corner23.android.demo.play.free'
        }
        playPaid {
            packageName = 'com.corner23.android.demo.play.paid'
        }
    }

    signingConfigs {
        release {
            if (project.hasProperty('demoKeyAlias') && 
                project.hasProperty('demoStoreFile') &&
                project.hasProperty('demoStorePassword') &&
                project.hasProperty('demoKeyPassword')) {
                keyAlias = demoKeyAlias
                storeFile = file(demoStoreFile)
                storePassword = demoStorePassword
                keyPassword = demoKeyPassword
            } else {
                signingConfig = null
            }
        }
    }

    buildTypes {
        debug {
            packageNameSuffix ".debug"
            versionNameSuffix "-SNAPSHOT"
        }

        release {
            signingConfig signingConfigs.release

            runProguard true
            proguardFile getDefaultProguardFile('proguard-android.txt')
        }
    }

    // setup your extra resources here, if not defined the default debug and 
    // release sourceSets will be used
    project.ext.amazonPaid = [
        debugManifest: 'src/amazonPaidDebug/AndroidManifest.xml',
        releaseManifest: 'src/amazonPaidRelease/AndroidManifest.xml',
        debugRes: ['src/amazonPaidDebug/res'],
        releaseRes: ['src/amazonPaidRelease/res']
    ]

    project.ext.amazonFree = [
        debugManifest: 'src/amazonFreeDebug/AndroidManifest.xml',
        releaseManifest: 'src/amazonFreeRelease/AndroidManifest.xml',
        debugRes: ['src/amazonFreeDebug/res'], 
        releaseRes: ['src/amazonFreeRelease/res']
    ]
}

clean.doLast {
    project.delete "$rootProject.projectDir/out"
}

def env = System.getProperties()
if (env['com.android.studio.gradle.project.path'] != null) {
    project.ext.buildFromAndroidStudio = true
}
