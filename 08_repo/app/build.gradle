apply plugin: 'android'

dependencies {
    compile 'com.android.support:support-v4:13.0.0'
    if (project.hasProperty("useRepo")) {
        compile 'com.corner23.android.library:ActionBarSherlock:4.2.0'
        compile 'com.corner23.android.library:UnifiedPreference:0.0.3'
    } else {
        compile project(':library:ActionBarSherlock')
        compile project(':library:UnifiedPreference')
    } 
}

// get hash of current commit
new ByteArrayOutputStream().withStream { os -> 
    def result = exec {
        executable = 'git'
        args = ['rev-parse', '--short', 'HEAD']
        standardOutput = os
    }
    
    project.ext.gitHash = os.toString().trim();
}

archivesBaseName = "demo"

android {
    compileSdkVersion 17
    buildToolsVersion "19.1.0"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 17
        versionName '1.0.1'
        applicationId = 'com.corner23.android.demo'
    }

    productFlavors {
        rock
        amazonFree {
            applicationId = 'com.corner23.android.amazon.free'
        }
        playFree {
            applicationId = 'com.corner23.android.playstore.free'
        }
    }

    signingConfigs {
        release {
            if (project.hasProperty('demoKeyAlias') && 
                project.hasProperty('demoStoreFile') &&
                project.hasProperty('demoStorePassword') &&
                project.hasProperty('demoKeyPassword')) {
                keyAlias = demoKeyAlias
                storeFile = file(demoStoreFile)
                storePassword = demoStorePassword
                keyPassword = demoKeyPassword
            } else {
                signingConfig = null
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-SNAPSHOT"
        }

        release {
            signingConfig signingConfigs.release

            runProguard true
            proguardFile getDefaultProguardFile('proguard-android.txt')
        }
    }
}

android.applicationVariants.all { variant ->
    // replace output apk name to <product>-<version>-<buildtype>-<githash>.apk
    def versionSuffix = variant.buildType.versionNameSuffix ? variant.buildType.versionNameSuffix : ""
    def versionName = variant.mergedFlavor.versionName + versionSuffix + "-${gitHash}";
    def apk = variant.outputFile;
    def newName = apk.name.replace(variant.buildType.name, versionName);

    variant.outputFile = new File(apk.parentFile, newName);

    // launch after install
    variant.install.doLast {
        def packageSuffix = variant.buildType.applicationIdSuffix ? variant.buildType.applicationIdSuffix : ""
        def packageName = variant.productFlavors.applicationId[0] ? variant.productFlavors.applicationId[0] : android.defaultConfig.applicationId
        def startupClass = packageName + packageSuffix + '/com.corner23.android.demo.MainActivity'
        def result = exec {
            executable = 'adb'
            args = ['shell', 'am', 'start', '-c', 'android.intent.category.LAUNCHER', '-n', startupClass]
        }
    }
}
